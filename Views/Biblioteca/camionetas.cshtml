@{
    ViewData["Title"] = "Documentos de Camionetas";
}

@using Microsoft.AspNetCore.Identity
@inject UserManager<Usuario> UserManager
@inject SignInManager<Usuario> SignInManager

@{
    var user = await UserManager.GetUserAsync(User);
    var esAdmin = await UserManager.IsInRoleAsync(user, "Administrador");
    var esProyectos = await UserManager.IsInRoleAsync(user, "Proyectos");
    var esGerencia = await UserManager.IsInRoleAsync(user, "Gerencia");
}


<div class="container mt-4">
    <h2 class="text-center mb-4">Documentos de Camionetas</h2>

    <!-- Botón para volver a la biblioteca -->
    <div class="mb-3">
        <a href="/Biblioteca" class="btn btn-secondary">⬅ Volver a la Biblioteca</a>
    </div>

    @if (esAdmin || esProyectos || esGerencia)
    {
        <!-- Formulario para subir documentos -->
        <div class="card mb-4">
            <div class="card-header bg-orange text-white">
                📤 Subir Nuevo Documento
            </div>
            <div class="card-body">
                <form id="formSubirDocumento" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label class="form-label">Título del Documento</label>
                        <input type="text" id="tituloDocumento" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Seleccione el Archivo</label>
                        <input type="file" id="archivoDocumento" class="form-control" accept=".pdf,.docx,.xlsx,.jpg,.png" required>
                    </div>
                    <button type="button" class="btn btn-secondary" id="btnSubirDocumento">Subir Documento</button>
                </form>
            </div>
        </div>
    }


    <!-- Lista de documentos disponibles -->
    <div class="card">
        <div class="card-header bg-orange text-white">
            📂 Documentos Disponibles
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>Nombre del Archivo</th>
                        <th class="text-end">Acción</th>
                    </tr>
                </thead>
                <tbody id="listaDocumentos">
                    @if (ViewBag.Archivos != null && ViewBag.Archivos.Count > 0)
                    {
                        foreach (var archivo in ViewBag.Archivos)
                        {
                            <tr>
                                <td>@archivo</td>
                                <td class="text-end">
                                    <a href="/documentos/Camionetas/@archivo" target="_blank" class="btn btn-secondary btn-sm">📥 Descargar</a>
                                    <button class="btn btn-orange btn-sm btnEliminar" data-archivo="@archivo">🗑 Eliminar</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="2" class="text-center text-muted">No hay documentos disponibles.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal para mostrar mensajes -->
<div class="modal fade" id="modalMensaje" tabindex="-1" aria-labelledby="modalMensajeLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalMensajeLabel">Información</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalMensajeTexto">
                <!-- Aquí se mostrará el mensaje -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Confirmación de Eliminación -->
<div class="modal fade" id="modalConfirmarEliminar" tabindex="-1" aria-labelledby="modalConfirmarEliminarLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalConfirmarEliminarLabel">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ¿Seguro que deseas eliminar este documento?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-orange" id="btnConfirmarEliminar">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript para la subida y eliminación de documentos -->
<script>
    let archivoAEliminar = "";
    let botonEliminarActual = null;

    document.getElementById("btnSubirDocumento").addEventListener("click", async function () {
        let titulo = document.getElementById("tituloDocumento").value.trim();
        let archivo = document.getElementById("archivoDocumento").files[0];

        if (!titulo || !archivo) {
            mostrarModal("Por favor, ingrese un título y seleccione un archivo.");
            return;
        }

        let formData = new FormData();
        formData.append("titulo", titulo);
        formData.append("archivo", archivo);

        try {
            let response = await fetch("/Biblioteca/SubirDocumentoCamionetas", {
                method: "POST",
                body: formData
            });

            let result = await response.json();
            if (result.success) {
                location.reload(); // Recargar la página solo si la subida es exitosa
            } else {
                mostrarModal("Error al subir el documento.");
            }
        } catch (error) {
            console.error("Error:", error);
            mostrarModal("Hubo un problema al procesar la solicitud.");
        }
    });

    document.querySelectorAll(".btnEliminar").forEach(button => {
        button.addEventListener("click", function () {
            archivoAEliminar = this.getAttribute("data-archivo");
            botonEliminarActual = this; // Guardar referencia al botón de eliminar
            var modalEliminar = new bootstrap.Modal(document.getElementById("modalConfirmarEliminar"));
            modalEliminar.show();
        });
    });

    document.getElementById("btnConfirmarEliminar").addEventListener("click", async function () {
        try {
            let response = await fetch(`/Biblioteca/EliminarDocumentoCamionetas?archivo=${encodeURIComponent(archivoAEliminar)}`, {
                method: "DELETE"
            });

            let result = await response.json();
            if (result.success) {
                let modalEliminar = bootstrap.Modal.getInstance(document.getElementById("modalConfirmarEliminar"));
                modalEliminar.hide(); // Cerrar el modal de confirmación de eliminación

                // Eliminar la fila del documento en la tabla sin recargar la página
                let fila = botonEliminarActual.closest("tr");
                if (fila) fila.remove();
            }
        } catch (error) {
            console.error("Error:", error);
            mostrarModal("Hubo un problema al procesar la solicitud.");
        }
    });

    function mostrarModal(mensaje) {
        document.getElementById("modalMensajeTexto").innerText = mensaje;
        var modal = new bootstrap.Modal(document.getElementById("modalMensaje"));
        modal.show();
    }
</script>


<style>
   



    .table thead {
        background-color: #f1663b;
        color: white;
    }

   
</style>
