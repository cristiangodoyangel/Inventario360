@model IEnumerable<Inventario360.Models.FichaEmpleado>

@{
    ViewData["Title"] = "Fichas de Empleados";
}

<div class="container mt-4">
    <h2 class="mb-4 text-center">📋 Fichas de Empleados</h2>

    <!-- Tarjetas Resumen -->
    <div class="row text-center">
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Vigentes</h5>
                    <p class="card-text fs-4" id="vigentes">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <h5 class="card-title">Por Vencer</h5>
                    <p class="card-text fs-4" id="porVencer">0</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <h5 class="card-title">Vencidos</h5>
                    <p class="card-text fs-4" id="vencidos">0</p>
                </div>
            </div>
        </div>
    </div>

    <div class="text-end mt-3">
        <a asp-action="Crear" class="btn btn-success">➕ Nueva Ficha</a>
    </div>

    <!-- Tabla de empleados -->
    <table id="tablaEmpleados" class="table table-striped table-bordered mt-3">
        <thead class="table-light">
            <tr>
                <th>Empleado</th>
                <th>Fecha de Ingreso</th>
                <th>Contrato Vence</th>
                <th>Examen Vence</th>
                <th>Curso Altura</th>
                <th>Acreditaciones</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @{
                var fichasOrdenadas = Model.OrderBy(f =>
                f.FechaTerminoContrato <= DateTime.Now || f.FechaVencimientoExamen <= DateTime.Now ? 2 :
                f.FechaTerminoContrato <= DateTime.Now.AddMonths(1) || f.FechaVencimientoExamen <= DateTime.Now.AddMonths(1) ? 1 :
                0);

                foreach (var ficha in fichasOrdenadas)
                {
                    var estadoClase = "table-success"; // Default verde
                    if (ficha.FechaTerminoContrato <= DateTime.Now || ficha.FechaVencimientoExamen <= DateTime.Now)
                    {
                        estadoClase = "table-danger"; // Rojo (vencido)
                    }
                    else if (ficha.FechaTerminoContrato <= DateTime.Now.AddMonths(1) || ficha.FechaVencimientoExamen <= DateTime.Now.AddMonths(1))
                    {
                        estadoClase = "table-warning"; // Amarillo (por vencer)
                    }

                    <tr class="@estadoClase">

                        <td>
                            <a asp-action="Detalle" asp-route-id="@ficha.ID" class="fw-bold text-dark">
                                @ficha.Empleado.Nombre
                            </a>
                        </td>
                                                <td>@ficha.FechaIngreso.ToString("dd-MM-yyyy")</td>
                        <td>@(ficha.FechaTerminoContrato?.ToString("dd-MM-yyyy") ?? "N/A")</td>
                        <td>@(ficha.FechaVencimientoExamen?.ToString("dd-MM-yyyy") ?? "N/A")</td>
                        <td>@(ficha.CursoAltura ? "✅ Sí" : "❌ No")</td>
                        <td>@(string.IsNullOrEmpty(ficha.Acreditaciones) ? "N/A" : ficha.Acreditaciones)</td>
                        <td>
                            <a asp-action="Detalle" asp-route-id="@ficha.ID" class="btn btn-icon">🔍 </a>
                            <a asp-action="Editar" asp-route-id="@ficha.ID" class="btn btn-icon">✏️ </a>
                            <a asp-action="Eliminar" asp-route-id="@ficha.ID" class="btn btn-icon" onclick="return confirm('¿Seguro que deseas eliminar esta ficha?')">🗑️</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Gráfico de barras -->
    <!-- Gráfico de barras -->
    <canvas id="graficoEstado" class="mt-4"></canvas>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.4.1/js/dataTables.responsive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- Agregada esta línea -->


    <script>
        $(document).ready(function () {
            $('#tablaEmpleados').DataTable();

            var vigentes = 0, porVencer = 0, vencidos = 0;

            $("tbody tr").each(function () {
                if ($(this).hasClass("table-danger")) vencidos++;
                else if ($(this).hasClass("table-warning")) porVencer++;
                else vigentes++;
            });

            // Actualizar tarjetas
            $("#vigentes").text(vigentes);
            $("#porVencer").text(porVencer);
            $("#vencidos").text(vencidos);

            // Verificar si el canvas existe antes de intentar crear el gráfico
            var canvas = document.getElementById('graficoEstado');
            if (canvas) {
                var ctx = canvas.getContext('2d');

                // Destruir el gráfico existente si ya se ha creado antes
                if (window.miGraficoEstado instanceof Chart) {
                    window.miGraficoEstado.destroy();
                }

                // Crear nuevo gráfico y guardarlo en una variable global
                window.miGraficoEstado = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['Vigentes', 'Por Vencer', 'Vencidos'],
                        datasets: [{
                            label: 'Estado de Empleados',
                            data: [vigentes, porVencer, vencidos],
                            backgroundColor: ['#28a745', '#ffc107', '#dc3545']
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: true,
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }
        });
    </script>
}

}

<style>
    .btn-orange {
        background-color: #f06529 !important;
        border-radius: 5px;
        border-color: #f06529 !important;
        color: white !important;
    }

        .btn-orange:hover {
            background-color: #d9531e !important;
            border-color: #d9531e !important;
        }

    .btn-icon {
        background-color: transparent !important;
        border: 1px solid #000000 !important;
        color: #f06529 !important;
        border-radius: 5px;
        font-size: 1.2rem;
        padding: 0.3rem;
    }

        .btn-icon:hover {
            color: #d9531e !important;
        }

    .table-responsive {
        overflow-x: auto;
    }

    .pagination-separated .paginate_button {
        margin: 0 8px;
    }

    .table-hover tbody tr:hover {
        background-color: #ffcebf;
    }

    .mb-4 {
        margin-bottom: 3rem !important;
    }

    .table-light th {
        background-color: #f8f9fa;
        font-weight: bold;
        text-align: center;
    }

    .table td {
        vertical-align: middle;
    }

    </style >